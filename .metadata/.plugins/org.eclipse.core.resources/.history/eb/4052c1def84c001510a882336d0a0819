package com.max.window;

import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.InetSocketAddress;

import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import com.max.server.ChatServer;

public class Client extends JFrame {

	private JPanel contentPane;
	private InetSocketAddress ip;
	private int port;
	private String username;
	private Client frame;
	
	private ChatServer server;

	
	/**
	 * Create the frame.
	 */
	public Client(String ip, String port, String username) {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		this.setTitle("MaxChat | username: " + username + " | IP: " + ip + " | Port: " + port);
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu mnFile = new JMenu("File");
		menuBar.add(mnFile);
		
		JMenuItem mntmDisconnect = new JMenuItem("Disconnect");
		mntmDisconnect.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				try {
					frame.dispose();
					LoginWindow.getLoginWindow().setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
		
		mnFile.add(mntmDisconnect);
		
		JMenuItem mntmChangeUsername = new JMenuItem("Change Username");
		mnFile.add(mntmChangeUsername);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		GridBagLayout gbl_contentPane = new GridBagLayout();
		gbl_contentPane.columnWidths = new int[]{0};
		gbl_contentPane.rowHeights = new int[]{0};
		gbl_contentPane.columnWeights = new double[]{Double.MIN_VALUE};
		gbl_contentPane.rowWeights = new double[]{Double.MIN_VALUE};
		contentPane.setLayout(gbl_contentPane);
		
		this.port = Integer.parseInt(port);
		this.ip = new InetSocketAddress(ip, this.port);
		
		try {
			server = new ChatServer(this.ip);
		} catch (IOException e) {
			server = ChatServer.getInstance();
		}
		
		frame = this;
	}

}
