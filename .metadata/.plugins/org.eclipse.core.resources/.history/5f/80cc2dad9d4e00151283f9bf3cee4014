package com.max.window;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JTextArea;
import javax.swing.JTextField;

import com.max.server.ChatServer;

@SuppressWarnings("serial")
public class Client extends JFrame {
	
	private String host;
	private int port;
	
	private String username;
	private Client frame;

	private Socket clientSocket;
	private Scanner in;
	private PrintWriter out;
	
	private JTextField inputTextField;

	
	/**
	 * Create the frame.
	 */
	public Client(String hostName, String port, String username) {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 503, 421);
		this.setTitle("MaxChat | username: " + username + " | IP: " + hostName + " | Port: " + port);
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu mnFile = new JMenu("File");
		menuBar.add(mnFile);
		
		JMenuItem mntmDisconnect = new JMenuItem("Disconnect");
		mntmDisconnect.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {

				frame.dispose();
				LoginWindow.getLoginWindow().setVisible(true);
				
			}
		});
		
		mnFile.add(mntmDisconnect);
		
		JMenuItem mntmChangeUsername = new JMenuItem("Change Username");
		mnFile.add(mntmChangeUsername);
		
		
		
		this.host = hostName;
		this.port = Integer.parseInt(port);
		

		ChatServer.create(this.host, this.port);
	
		connectToServer();
		
		frame = this;
		getContentPane().setLayout(null);
		
		inputTextField = new JTextField();
		inputTextField.setText("Chat here...");
		inputTextField.addFocusListener(new FocusAdapter() {
			@Override
			public void focusGained(FocusEvent arg0) {
				if (inputTextField.getText().equals("Chat here..."));
				{
					inputTextField.setText("");
				}
			}
		});
		inputTextField.setBounds(10, 330, 368, 20);
		getContentPane().add(inputTextField);
		inputTextField.setColumns(10);
		
		JButton sendButton = new JButton("Send");
		sendButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if (!(inputTextField.getText().equals("Chat here...")) &&
						(inputTextField.getText().length() > 0));
				send(inputTextField.getText());
			}
		});
		sendButton.setBounds(388, 329, 89, 23);
		getContentPane().add(sendButton);
		
		JTextArea textArea = new JTextArea();
		textArea.setLineWrap(true);
		textArea.setEditable(false);
		textArea.setBounds(10, 11, 467, 308);
		getContentPane().add(textArea);
	}

	private void connectToServer() {
		
		try {
			clientSocket = new Socket(InetAddress.getByName(this.host), this.port);
			in = new Scanner(clientSocket.getInputStream());
			out = new PrintWriter(clientSocket.getOutputStream());
		} catch (UnknownHostException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}

		System.out.println("Client: Connected to "+ clientSocket.getInetAddress());	
	}
	
	public void send(String message) {
		out.println(message);
	}
}
