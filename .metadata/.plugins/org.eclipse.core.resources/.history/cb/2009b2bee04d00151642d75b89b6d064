package com.max.server;

import java.io.IOException;
import java.io.PrintWriter;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;

import com.max.client.ClientListener;

public class ChatServer {
	private InetSocketAddress ip;
	private ArrayList<Socket> clients;
	public ServerSocket ss;
	private static ChatServer instance;
	
	private static int numClients = 0;
	
	public ChatServer  (InetSocketAddress ip) throws IOException{
		
		this.ip = ip;
		
		clients = new ArrayList<Socket>();
		
		ss = new ServerSocket();
		ss.bind(ip);
		System.out.println("Server: Created on " + ip.getHostName() + " : " + ip.getPort());

		Thread listen = new Thread(new ConnectionListener(this));
		listen.start();	
		
		instance = this;
		
	}
	
	public static ChatServer getInstance() {
		return instance;	
	}
	
	public void sendToClients(String message) {
		for (Socket client : clients) {
			try {
				PrintWriter out;
				out = new PrintWriter(client.getOutputStream(), true);
				out.println(message);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		
	}
	
	public void closeServer() throws IOException {
		ss.close();
	}
	
	public void addClient(Socket client) {
		clients.add(client);
		numClients++;
		
		Thread clientListener = new Thread(new ClientListener(this, client));
		clientListener.start();
		
		//listen again
		Thread listen = new Thread(new ConnectionListener(this));
		listen.start();
	}
	
	public void removeClient(Socket client) {
		clients.remove(client);	
	}

	public static int getNumClients() {
		return numClients;
	}

	public InetSocketAddress getIp() {
		return ip;
	}	
}
