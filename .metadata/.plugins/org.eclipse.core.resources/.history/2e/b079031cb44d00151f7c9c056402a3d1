package com.max.window;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Socket;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JTextArea;
import javax.swing.JTextField;

import com.max.server.ChatServer;

@SuppressWarnings("serial")
public class Client extends JFrame {
	private InetSocketAddress address;
	private String username;
	private Client frame;
	
	private ChatServer server;
	private JTextField inputTextField;

	
	/**
	 * Create the frame.
	 */
	public Client(String ip, String port, String username) {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 503, 421);
		this.setTitle("MaxChat | username: " + username + " | IP: " + ip + " | Port: " + port);
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu mnFile = new JMenu("File");
		menuBar.add(mnFile);
		
		JMenuItem mntmDisconnect = new JMenuItem("Disconnect");
		mntmDisconnect.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {

				try {
					if (ChatServer.getNumClients() < 2) {
						System.out.println("Server: Shutting Down Server");
						server.closeServer();
					}
					
					frame.dispose();
					LoginWindow.getLoginWindow().setVisible(true);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			}
		});
		
		mnFile.add(mntmDisconnect);
		
		JMenuItem mntmChangeUsername = new JMenuItem("Change Username");
		mnFile.add(mntmChangeUsername);
		
		this.address = new InetSocketAddress(ip, Integer.parseInt(port));
		
		try {
			server = new ChatServer(this.address);
		} catch (IOException e) { //the server is already running
			server = ChatServer.getInstance();
			connectToServer();
		}
		
		frame = this;
		getContentPane().setLayout(null);
		
		inputTextField = new JTextField();
		inputTextField.setBounds(10, 330, 368, 20);
		getContentPane().add(inputTextField);
		inputTextField.setColumns(10);
		
		JButton sendButton = new JButton("Send");
		sendButton.setBounds(388, 329, 89, 23);
		getContentPane().add(sendButton);
		
		JTextArea textArea = new JTextArea();
		textArea.setBounds(10, 11, 467, 308);
		getContentPane().add(textArea);
	}


	private void connectToServer() {
				
	}
	
	private Socket getSocket(int port) {
		return null;
	}
}
